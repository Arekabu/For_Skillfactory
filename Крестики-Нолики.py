'''
Классические крестики-нолики.
Игровое поле 3x3. Начинает Игрок X.
Ходы осуществляются вводом индексов строк и столбцов игрового поля в консоли.
'''
# Создаём игровое поле game_field, являющееся словарём,
# где ключи - это индексы строк игрового поля, а значения - списки строк.
# Индексы значений словаря game_field соответствуют индексам столбцов игрового поля,
# а в строки записываются ходы.
game_field = {
    0 : ['-', '-', '-'],
    1 : ['-', '-', '-'],
    2 : ['-', '-', '-']
}
# создаём переменную для проверки правильности ввода индексов строк и столбцов
field_numbers = [0, 1, 2]
# создаём счётчик ходов
move_counter = 0

def show_game_field(field: dict[int,list[str]]) -> None:
    """
    Функция выводит в консоль текущее состояние игрового поля
    :param field: словарь с игровым полем
    :return: None
    """
    print()
    print("  0 1 2")
    for key, value in field.items():
        print(f"{key} {' '.join(value)}")
    print()

def game_over(field: dict[int,list[str]]) -> bool:
    """
    Функция проверяет выполнены ли условия для победы по текущему состоянию игрового поля.
    Условия победы: в какой-либо из строк, столбцов или проходящих через центр поля диагоналей
    все значения равны 'X' или 'O' ('X' и 'O' - английские заглавные буквы).
    :param field: Словарь с игровым полем
    :return: True если условия победы выполнены, иначе False
    """
    x_win = ['X', 'X', 'X']   # создаём список для проверки условий победы по 'X'
    o_win = ['O', 'O', 'O']   # создаём список для проверки условий победы по 'O'
    # создаём пустые списки для проверки столбцов и диагоналей
    c_0, c_1, c_2, d_00_22, d_02_20 = [], [], [], [], []
    for key, value in field.items():
        if value in (o_win, x_win):         # проверяем строки
            return True
        c_0.append(value[0])                # заполняем список для проверки столбца 0
        c_1.append(value[1])                # заполняем список для проверки столбца 1
        c_2.append(value[2])                # заполняем список для проверки столбца 2
        d_00_22.append(value[key])          # заполняем список для проверки диагонали 0:0-1:1-2:2
        d_02_20.append(value[abs(key - 2)]) # заполняем список для проверки диагонали 0:2-1:1-2:0
    return any([c_0 == x_win, c_0 == o_win,
           c_1 == x_win, c_1 == o_win,
           c_2 == x_win, c_2 == o_win,
           d_00_22 == x_win, d_00_22 == o_win,
           d_02_20 == x_win, d_02_20 == o_win]) # проверяем столбцы и диагонали

print()
print("""     Якомазов Алексей
---==Крестики--нолики==---""")

show_game_field(game_field) # выводим начальное состояние игрового поля

while True: # запуск игры
    move_counter += 1 # обновляем счётчик ходов

    # если к 10 ходу условия для победы не выполнены, то это ничья, т.к. все поля заняты
    if move_counter == 10:
        print("Ничья!")
        break

    # идентифицируем текущего игрока
    # начинают игру всегда 'крестики', значит при нечётных ходах это Игрок X, а при чётных - Игрок O
    current_player = 'O' if move_counter % 2 == 0 else 'X'

    # Реализуем вывод Раундов. Новый Раунд начинается когда оба игрока сделали ход
    if move_counter % 2 != 0:
        print(f"-------------==Раунд "
              f"{1 if move_counter == 1 else int((move_counter + 1)/2)}"
              f"==-------------")
    print(f"Игрок {current_player}")

    while True: # инициализируем проверку правильности ввода индексов строки и столбца
        # запускаем ввод индекса строки пока не будет введено правильное значение
        row = None
        while True:
            try:
                row = int(input("Введите номер строки: "))
            except ValueError as e:
                pass
            if row in field_numbers:
                break
            print('Введен неверный номер строки!')

        # запускаем ввод индекса столбца пока не будет введено правильное значение
        column = None
        while True:
            try:
                column = int(input("Введите номер столбца: "))
            except ValueError as e:
                pass
            if column in field_numbers:
                break
            print("Введен неверный номер столбца!")

        # по индексам строки и столбца проверяем, свободна ли соответствующая ячейка
        if game_field[row][column] != '-':
            print("Место занято! Переходите!")
        else:
            # если ячейка свободна, записываем в неё символ текущего игрока
            # и прерываем проверку ввода индексов
            game_field[row][column] = current_player
            break

    show_game_field(game_field)  # показываем актуальное состояние игрового поля
    if game_over(game_field):  # проверяем актуальное состояние игрового поля на условия победы
        # если условия победы соблюдены - поздравляем победителя и прерываем игру
        print(f"Игрок {current_player} побеждает на {move_counter} ходу!")
        break
