# Создаём игровое поле game_field, являющееся словарём где ключи - это индексы строк игрового поля, а значения - списки строк.
# Индексы значений словаря game_field соответствуют индексам столбцов игрогого поля, а в строки записываются ходы.

game_field = {0 : ['-', '-', '-'], 1 : ['-', '-', '-'], 2: ['-', '-', '-']}
field_numbers = [0, 1, 2]    #создаём переменную для проверки правильности ввода индексов строк и стобцов
move_counter = 0    #создаём счётчик ходов

def show_game_field(field: dict[int,list[str]]) -> None:
    """
    Функция выводит в консоль текущее состояние игрового поля
    :param field: словарь с игровым полем
    :return: None
    """
    print()
    print("  0 1 2")
    for key, value in field.items():
        print(f"{key} {' '.join(value)}")
    print()

def game_over(field: dict[int,list[str]]) -> bool:
    """
    Функция проверяет выполнены ли условия для победы по текущему состоянию игрового поля.
    Условия победы: в какой либо из строк, столбцов или проходящих через центр поля диагоналей
    все значения равны 'X' или 'O' ('X' и 'O' - английские заглавные буквы).
    :param field: словарь с игровым полем
    :return: True если условия победы выполннены, иначе False
    """
    X = ['X', 'X', 'X']     #создаём список для проверки условий победы по 'X'
    O = ['O', 'O', 'O']     #создаём список для проверки условий победы по 'O'
    C0, C1, C2, D00_22, D02_20 = [], [], [], [], []     #создаём пустые списки для проверки столбцов и диагоналей
    for key, value in field.items():
        if value == O or value == X:       #проверяем строки
            return True
        C0.append(value[0])                #заполняем список для проверки столбца 0
        C1.append(value[1])                #заполняем список для проверки столбца 1
        C2.append(value[2])                #заполняем список для проверки столбца 2
        D00_22.append(value[key])          #заполняем список для проверки диагонали 0:0 - 1:1 - 2:2
        D02_20.append(value[abs(key - 2)]) #заполняем список для проверки диагонали 0:2 - 1:1 - 2:0
    return any([C0 == X, C0 == O,
           C1 == X, C1 == O,
           C2 == X, C2 == O,
           D00_22 == X, D00_22 == O,
           D02_20 == X, D02_20 == O])       #проверяем столбцы и диагонали

print()
print("""     Якомазов Алексей
---==Крестики--нолики==---""")

show_game_field(game_field)     #выводим начальное состояние игрового поля

while True:     #запуск игры
    move_counter += 1   #обновляем счётчик ходов

    if move_counter == 10:    #если к 10 ходу условия для победы не выполнены, то это ничья, т.к. все поля заняты
        print("Ничья!")
        break

    # идентифицируем текущего игрока
    # начинают игру всегда 'крестики', значит при нечётных ходах это Игрок X, а при чётных - Игрок O
    current_player = 'O' if move_counter % 2 == 0 else 'X'

    #реализуем вывод Раундов. Новый Раунд начинается когда оба игрока сделали ход
    if not move_counter % 2 == 0:
        print(f"-------------==Раунд {1 if move_counter == 1 else int((move_counter + 1)/2)}==-------------")
    print(f"Игрок {current_player}")

    while True:     #инициализируем проверку правильности ввода индексов строки и столбца
        row = int(input("Введите номер строки: "))
        while not row in field_numbers:    #запускаем ввод индекса строки пока не будет введено правильное значение
            print("Введен неверный номер строки!")
            row = int(input("Введите номер строки: "))

        column = int(input("Введите номер столбца: "))
        while not column in field_numbers: #запускаем ввод индекса столбца пока не будет введено правильное значение
            print("Введен неверный номер столбца!")
            column = int(input("Введите номер столбца: "))

        if not game_field[row][column] == '-':   #по индексам строки и столбца проверяем, свободна ли соответствующая ячейка
            print("Место занято! Переходите!")
        else:
            game_field[row][column] = current_player  #если ячейка свободна, записываем в неё символ текущего игрока и прерываем проверку ввода индексов
            break

    show_game_field(game_field)  #показываем актуальное состояние игрового поля
    if game_over(game_field):  #проверяем актуальное состояние игрового поля на условия победы
        print(f"Игрок {current_player} побеждает на {move_counter} ходу!") #если условия победы соблюдены - поздравляем победителя и прерываем игру
        break
